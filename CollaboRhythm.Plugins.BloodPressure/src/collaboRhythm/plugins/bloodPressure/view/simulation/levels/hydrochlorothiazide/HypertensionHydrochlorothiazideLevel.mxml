<?xml version="1.0"?>
<!--~
  ~ Copyright 2011 John Moore, Scott Gilroy
  ~
  ~ This file is part of CollaboRhythm.
  ~
  ~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  ~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  ~ version.
  ~
  ~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  ~ <http://www.gnu.org/licenses/>.
  -->
<view3:SimulationLevelGroup
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:view2="collaboRhythm.shared.view.*"
		xmlns:hydrochlorothiazide="collaboRhythm.plugins.bloodPressure.view.simulation.levels.hydrochlorothiazide.*"
		xmlns:buttons="collaboRhythm.simulation.view.buttons.*"
		xmlns:view3="collaboRhythm.simulation.view.*"
		xmlns:view4="collaboRhythm.shared.ui.healthCharts.view.*"
		width="100%" height="100%"
		title="Kidney"
		>

	<s:Group width="360" height="400">
		<s:layout>
			<view2:ScaleToFitLayout unscaledWidth="360" aspectRatioMin="0.85" aspectRatioMax="1.25"/>
		</s:layout>
		<hydrochlorothiazide:HydrochlorothiazideSimulationView id="hydrochlorothiazideSimulationView"
															   concentration="{medicationModel.concentration}"
				/>
	</s:Group>
	<s:Group id="arrowsGroup" width="100%" height="100%"/>

	<buttons:SimulationDetailButton
			id="hydrochlorothiazideTitle"
			x="{detailButtonX}"
			label="Hydrochlorothiazide"
			subtitle="{medicationModel.drugClass}"
			expanded="true"
			listDataProvider="{stepsListData}"
			drillDownEnabled="false"
			>
		<buttons:leftContent>
			<view4:MedicationScheduleItemChartView id="medicationView" left="7" verticalCenter="0" width="32"
												  height="32"/>
		</buttons:leftContent>
	</buttons:SimulationDetailButton>

	<fx:Script><![CDATA[
		import collaboRhythm.shared.apps.healthCharts.model.MedicationComponentAdherenceModel;
		import collaboRhythm.shared.apps.healthCharts.model.SimulationModel;
		import collaboRhythm.simulation.view.buttons.StepListItem;

		import mx.collections.ArrayCollection;
		import mx.events.FlexEvent;
		import mx.events.PropertyChangeEvent;

		[Bindable]
		private var stepsListData:ArrayCollection;

		[Bindable]
		private var medicationModel:MedicationComponentAdherenceModel;

		protected override function creationCompleteHandler(event:FlexEvent):void
		{
			lookupMedications();

			super.creationCompleteHandler(event);
		}

		private function simulationModel_propertyChangeHandler(event:PropertyChangeEvent):void
		{
			if (event.property == "isInitialized")
				lookupMedications();
		}

		private function lookupMedications():void
		{
			if (simulationModel)
			{
				// TODO: support scenarios where there are multiple thiazide diuretics; currently we ignore all but the first one
				medicationModel = null;
				for each (var medication:MedicationComponentAdherenceModel in simulationModel.medications)
				{
					if (medication.drugClass == SimulationModel.THIAZIDE_DIURETIC)
					{
						medicationModel = medication;
						break;
					}
				}

				if (medicationModel)
				{
					medicationModel.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE,
							medicationModel_propertyChanged);
					updateStepsListData();
					medicationView.medicationScheduleItem = medicationModel.medicationScheduleItem;
				}
			}
		}

		private function medicationModel_propertyChanged(event:PropertyChangeEvent):void
		{
			if (event.property == "concentrationSeverityLevel")
			{
				updateStepsListData();
			}
		}

		public override function set simulationModel(value:SimulationModel):void
		{
			super.simulationModel = value;
			if (simulationModel)
				simulationModel.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE,
						simulationModel_propertyChangeHandler);
			lookupMedications();
		}

		private function updateStepsListData():void
		{
			switch (medicationModel.concentrationSeverityLevel)
			{
				case -1:
					// not initialized; do nothing
					break;
				case 0:
					stepsListData = new ArrayCollection([
						new StepListItem("Hydrochlorothiazide below goal", SimulationModel.SEVERITY_COLOR_HIGH),
						new StepListItem("Salt channels in kidney open", SimulationModel.SEVERITY_COLOR_HIGH),
						new StepListItem("Decreased urine salt concentration", SimulationModel.SEVERITY_COLOR_HIGH),
						new StepListItem("Decreased urine volume", SimulationModel.SEVERITY_COLOR_HIGH),
						new StepListItem("Increased venous blood volume", SimulationModel.SEVERITY_COLOR_HIGH),
						new StepListItem("Increased work for heart", SimulationModel.SEVERITY_COLOR_HIGH),
						new StepListItem("Increased blood pressure", SimulationModel.SEVERITY_COLOR_HIGH),
					]);
					break;
				case 1:
					stepsListData = new ArrayCollection([
						new StepListItem("Hydrochlorothiazide below goal", SimulationModel.SEVERITY_COLOR_MEDIUM),
						new StepListItem("Salt channels in kidney open", SimulationModel.SEVERITY_COLOR_MEDIUM),
						new StepListItem("Decreased urine salt concentration", SimulationModel.SEVERITY_COLOR_MEDIUM),
						new StepListItem("Decreased urine volume", SimulationModel.SEVERITY_COLOR_MEDIUM),
						new StepListItem("Increased venous blood volume", SimulationModel.SEVERITY_COLOR_MEDIUM),
						new StepListItem("Increased work for heart", SimulationModel.SEVERITY_COLOR_MEDIUM),
						new StepListItem("Increased blood pressure", SimulationModel.SEVERITY_COLOR_MEDIUM),
					]);
					break;
				case 2:
					stepsListData = new ArrayCollection([
						new StepListItem("Hydrochlorothiazide at goal", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Salt channels in kidney blocked", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Increased urine salt concentration", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Increased urine volume", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased venous blood volume", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased work for heart", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased blood pressure", SimulationModel.SEVERITY_COLOR_GOAL),
					]);
					break;
				case 3:
					stepsListData = new ArrayCollection([
						new StepListItem("Hydrochlorothiazide above goal", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Salt channels in kidney blocked", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Increased urine salt concentration", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Increased urine volume", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased venous blood volume", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased work for heart", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased blood pressure", SimulationModel.SEVERITY_COLOR_GOAL),
					]);
					break;
				case 4:
					stepsListData = new ArrayCollection([
						new StepListItem("Hydrochlorothiazide above goal", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Salt channels in kidney blocked", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Increased urine salt concentration", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Increased urine volume", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased venous blood volume", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased work for heart", SimulationModel.SEVERITY_COLOR_GOAL),
						new StepListItem("Decreased blood pressure", SimulationModel.SEVERITY_COLOR_GOAL),
					]);
					break;
				default:
					throw new Error("Unhandled concentrationSeverityLevel:",
							medicationModel.concentrationSeverityLevel);
			}
		}
		]]></fx:Script>
</view3:SimulationLevelGroup>
